<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.UserDaoMapper">   <!-- 命名空间，名字可以随意起，只要不冲突即可 -->
	<!-- 对象映射，可以不写 -->
	<resultMap type="model.Person" id="personRM">
        <!-- property="id"，表示实体对象的属性；column="ID"，表示结果集字段 -->
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>
    </resultMap>
	<!-- 查询功能，resultType 设置返回值类型 -->
	<select id="findAll" resultType="model.Person">  <!-- 书写 SQL 语句 -->
		SELECT * FROM Person
	</select>
	<!-- 通过 ID 查询 -->
	<select id="get" parameterType="Integer" resultMap="personRM">  <!-- 书写 SQL 语句 -->
		SELECT * FROM Person
		WHERE id = #{id}
	</select>

	<!-- 新增功能，在SQL语句中有参数，并以实体来封装参数 -->
	<insert id="insert" parameterType="model.Person">
		INSERT INTO person (id,name,age) VALUES (#{id},#{name},#{age})
	</insert>

	<!-- 修改功能 -->
	<update id="update" parameterType="model.Person">
		UPDATE person set name=#{name},age=#{age}
		WHERE id = #{id}
	</update>

<!-- 删除功能 -->
    <delete id="deleteById" parameterType="integer">
        DELETE FROM person
        WHERE id = #{id}
    </delete>


<!-- 批量删除，Array 类型 -->
    <delete id="deleteArray" parameterType="integer">
        DELETE FROM person where id IN
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <!-- 批量删除，List 类型 -->
    <delete id="deleteList" parameterType="integer">
        DELETE FROM person where id IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    
    <!-- 批量删除，Map 类型 -->
    <delete id="deleteMap" parameterType="Map">
        DELETE FROM person WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        AND  age = #{age}
    </delete>
</mapper>